DROP TABLE IF EXISTS logs;
DROP TABLE IF EXISTS posters;
DROP TABLE IF EXISTS posts;

CREATE TABLE logs (
	id INTEGER PRIMARY KEY,
	error_code INTEGER NOT NULL,
	error_message VARCHAR DEFAULT NULL,
	date_at DATE DEFAULT CURRENT_DATE NOT NULL
);
CREATE TABLE posters (
	id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	login VARCHAR UNIQUE NOT NULL,
	nickname VARCHAR UNIQUE NOT NULL,
	hashed_password VARCHAR NOT NULL,
	is_active BOOLEAN DEFAULT TRUE NOT NULL,
	likes INTEGER DEFAULT 0 NOT NULL,
	created_at DATE DEFAULT CURRENT_DATE NOT NULL,
	photo_url VARCHAR DEFAULT NULL
);
CREATE TABLE posts (
	id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	title VARCHAR NOT NULL,
	poster_id INTEGER NOT NULL,
	FOREIGN KEY(poster_id) REFERENCES posters (id),
	text VARCHAR DEFAULT NULL, photo_urls VARCHAR DEFAULT NULL,
	likes INTEGER DEFAULT 0 NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

INSERT INTO posters (login, nickname, hashed_password) VALUES
    ('DmitryK', 'RyanGoslingFan', 'Password');
INSERT INTO posts (title, poster_login) VALUES
    ('PostOfLove', 1);